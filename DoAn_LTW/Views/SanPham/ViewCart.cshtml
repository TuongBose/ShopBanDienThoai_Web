@model DoAn_LTW.Models.ShoppingCart

@{
    ViewBag.Title = "Gio Hang";
    Layout = "~/Views/Share/LayoutUser.cshtml";
}

<style>
    /* Table Styling */
    .table {
        width: 100%;
        margin-bottom: 20px;
        border-collapse: collapse;
    }

        .table th, .table td {
            padding: 10px;
            text-align: center;
            vertical-align: middle;
        }

        .table th {
            background-color: #f8f9fa;
            color: #343a40;
        }

        .table tr:nth-child(even) {
            background-color: #f2f2f2;
        }

    .table-striped tbody tr:nth-child(odd) {
        background-color: #ffffff;
    }

    .table-bordered {
        border: 1px solid #dee2e6;
    }

        .table-bordered th, .table-bordered td {
            border: 1px solid #dee2e6;
        }

    /* Image Styling */
    .cart-item-image {
        width: 100px;
        height: 100px;
        object-fit: cover;
        border-radius: 5px;
    }

    /* Form Control Styling */
    .cart-quantity {
        width: 60px;
        text-align: center;
    }

    /* Button Styling */
    .btn-sm {
        padding: 5px 6px;
        font-size: 14px;
    }

    .btn-warning {
        background-color: #ffc107;
        border-color: #ffc107;
    }

    .btn-danger {
        background-color: #dc3545;
        border-color: #dc3545;
    }

    .btn-primary {
        background-color: #007bff;
        border-color: #007bff;
    }

    /* Cart Summary Styling */
    .cart-summary {
        display: flex; /* Sử dụng flexbox */
        justify-content: center; /* Căn giữa theo chiều ngang */
        align-items: center; /* Căn giữa theo chiều dọc */
        flex-direction: column;
    }

        .cart-summary h3 {
            font-size: 24px;
            color: #333;
        }

        .cart-summary a {
            margin-top: 10px;
            padding: 10px 20px;
            font-size: 16px;
        }

    .btn-thanh-toan {
        padding: 10px 20px;
        font-size: 16px;
        margin-left: 15px; /* Thêm khoảng cách nếu cần */
        background-color: #007bff;
        border-color: #007bff;
        color: white;
        text-decoration: none;
        border-radius: 10px;
    }

        .btn-thanh-toan:hover {
            background-color: #0056b3;
            border-color: #0056b3;
        }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function updateCart(maSanPham, soLuong) {
        $.ajax({
            url: '@Url.Action("UpdateCartJson", "SanPham")',
            type: 'POST',
            data: {
                maSanPham: maSanPham,
                soLuong: soLuong
            },
            success: function (response) {
                if (response.success) {
                    // Cập nhật tổng số lượng sản phẩm trong giỏ hàng
                    $('#cartItemCount').text(response.cartItemCount);

                    // Cập nhật tổng tiền giỏ hàng
                    $('#totalPrice').text(response.totalPrice.toLocaleString() + ' VNĐ');

                    // Cập nhật tổng tiền của sản phẩm vừa thay đổi
                    $('#itemTotal_' + maSanPham).text(response.itemTotal.toLocaleString() + ' VNĐ');

                    // Nếu giỏ hàng trống, ẩn nút "Đặt hàng"
                    if (response.cartItemCount === 0) {
                        $('.btn-thanh-toan').hide();
                    } else {
                        $('.btn-thanh-toan').show();
                    }
                } else {
                    alert(response.message || "Có lỗi xảy ra");
                }
            },
            error: function () {
                alert("Không thể cập nhật giỏ hàng. Vui lòng thử lại.");
            }
        });
    }
</script>

<h2>Giỏ hàng của bạn</h2>

@if (Model.Items.Count > 0)
{
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>Hình ảnh</th>
                <th>Tên sản phẩm</th>
                <th>Số lượng</th>
                <th>Giá</th>
                <th>Thành tiền</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td><img src="@Url.Content("~/Images/HinhAnhSP/" + item.HinhAnh)" alt="@item.TenSanPham" class="cart-item-image" /></td>
                    <td>@item.TenSanPham</td>
                    <td>
                        @using (Html.BeginForm("UpdateCart", "SanPham", FormMethod.Post))
                        {
                            @Html.Hidden("maSanPham", item.MaSanPham)
                            <input type="number" name="soLuong" value="@item.SoLuong" min="1" class="form-control cart-quantity"
                                   onchange="updateCart(@item.MaSanPham, this.value)" />

                        }
                    </td>
                    <td>@item.Gia</td>
                    <td id="itemTotal_@item.MaSanPham">@item.ThanhTien.ToString("N0") VNĐ</td>
                    <td>
                        @Html.ActionLink("Xóa", "RemoveFromCart", new { msp = item.MaSanPham }, new { @class = "btn btn-danger btn-sm" })
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <div class="cart-summary">
        <h3 class="text-md-center" id="totalPrice">Tổng cộng: @Model.GetTotal().ToString("N0") VNĐ</h3>
        <a href="@Url.Action("DatHang", "SanPham")" class="btn btn-primary" style="display:@(Model.Items.Count > 0 ? "inline-block" : "none");">Đặt hàng</a>
    </div>
}
else
{
    <p>Giỏ hàng của bạn hiện tại không có sản phẩm nào.</p>
}
